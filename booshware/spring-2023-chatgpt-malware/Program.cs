using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net;
using System.Drawing;
using System.Drawing.Imaging;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Forms;

namespace chatgpt_malware
{

    public class ScreenshotHelper
    {
        public static void CaptureAndSaveScreenshot(string fileName)
        {
            try
            {
                // Get the primary screen
                Screen primaryScreen = Screen.PrimaryScreen;

                // Create a bitmap to hold the screenshot
                Bitmap screenshot = new Bitmap(primaryScreen.Bounds.Width, primaryScreen.Bounds.Height);

                // Create a graphics object from the bitmap
                using (Graphics graphics = Graphics.FromImage(screenshot))
                {
                    // Capture the screen
                    graphics.CopyFromScreen(primaryScreen.Bounds.X, primaryScreen.Bounds.Y, 0, 0, primaryScreen.Bounds.Size);
                }

                // Save the screenshot to the current directory
                string filePath = Path.Combine(Directory.GetCurrentDirectory(), fileName);
                screenshot.Save(filePath, ImageFormat.Png);

                // Optionally, you can also display the saved file path
                Console.WriteLine("Screenshot saved: " + filePath);
            }
            catch (Exception ex)
            {
                Console.WriteLine("Error capturing and saving screenshot: " + ex.Message);
            }
        }
    }

    internal class Program
    {
        public static string GetExternalIP()
        {
            try
            {
                using (var webClient = new WebClient())
                {
                    // Make a request to the IP address retrieval service
                    string ipAddress = webClient.DownloadString("https://api.ipify.org");
                    return ipAddress.Trim(); // Trim any whitespace characters that might have been included in the response
                }
            }
            catch (Exception ex)
            {
                // Handle any errors that may occur during the request (e.g., network issues, server problems)
                Console.WriteLine("Error retrieving external IP address: " + ex.Message);
                return null;
            }
        }

        static void Main(string[] args)
        {
            Console.WriteLine("You've been hacked!!!1!");


            string ex_ip = GetExternalIP();
            Console.WriteLine("External IP address = " + ex_ip);

            // Get desktop screenshot
            ScreenshotHelper.CaptureAndSaveScreenshot("screenshot.jpg");
        }
    }
}
